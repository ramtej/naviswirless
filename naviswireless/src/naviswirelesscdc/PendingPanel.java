/*
 * PendingPanel.java
 *
 * Created on February 28, 2008, 11:44 PM
 */

package naviswirelesscdc;

import java.awt.Button;
import java.awt.Label;
import java.awt.List;
import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.StringTokenizer;

/**
 *
 * @author  dr. xinyu liu
 */
public class PendingPanel extends java.awt.Panel {
    
    MainFrame parentFrame;
    
    /** Creates new form PendingPanel */
    public PendingPanel(MainFrame parentFrame) {
        this.parentFrame = parentFrame;
        initComponents();
        parentFrame.add(this, java.awt.BorderLayout.CENTER, 1);                
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        list1 = new java.awt.List();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();
        label6 = new java.awt.Label();

        setBackground(java.awt.Color.white);

        button1.setLabel("Update");
        button1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updatePendingAction(evt);
            }
        });

        button2.setLabel("Delete");
        button2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deletePendingAction(evt);
            }
        });

        list1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                itemSelectAction(evt);
            }
        });

        label3.setForeground(java.awt.Color.black);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(label1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .add(list1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(button1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 100, Short.MAX_VALUE)
                        .add(button2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(label2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .add(label3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .add(label4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .add(label5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
                    .add(label6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(list1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(button1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(button2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(label1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(2, 2, 2)
                .add(label2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(label3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(label4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(label5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(1, 1, 1)
                .add(label6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deletePendingAction(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deletePendingAction
        parentFrame.getMain().deletePending();
    }//GEN-LAST:event_deletePendingAction

    private void updatePendingAction(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updatePendingAction
        parentFrame.getMain().updatePending();
    }//GEN-LAST:event_updatePendingAction

    private void itemSelectAction(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_itemSelectAction
        
        this.label1.setText(""); 
        this.label2.setText(""); 
        this.label3.setText(""); 
        this.label4.setText(""); 
        this.label5.setText(""); 
        this.label6.setText("");  
        
        String fileName = this.list1.getSelectedItem();
        StringTokenizer tokens = new StringTokenizer(fileName, "_");    // no split(regex)
        String status = tokens.nextToken();
        
        if(status.indexOf("u")>=0)
            this.label1.setText("Status: Unfinished");
        else if(status.indexOf("f")>=0)
            this.label1.setText("Status: Finished");
        else
            this.label1.setText("Status: Unknown");
        
        File file = new File("."+parentFrame.getMain().getFileSeparator()
                +parentFrame.getMain().getConfigurations().getProperty(parentFrame.getMain().UPLOAD_FOLDER)
                +parentFrame.getMain().getFileSeparator()+fileName);
        
        if(parentFrame.getMain().getAudioProcessor()==null)
        {
            parentFrame.getMain().setAudioProcessor(new AudioProcessor(parentFrame.getMain()));
        }
        parentFrame.getMain().getAudioProcessor().reset();
        
        parentFrame.getMain().getAudioProcessor().createAudioInputStream(file);
        
        if(parentFrame.getMain().getAudioProcessor().audioInputStream == null)
        {
            this.button1.setEnabled(false);
            this.button2.setEnabled(true);
            this.label2.setText("The file is corrupted and unreadable.");
            
        }else
        {
            this.button1.setEnabled(true);
            this.button2.setEnabled(true);                 
            
            javax.sound.sampled.AudioFormat format = parentFrame.getMain().getAudioProcessor().audioInputStream.getFormat();
            int fileLength = (int)(file.length()/(format.getFrameRate()*format.getFrameSize()));
            int filelengthMin = fileLength/60;
            int fileLengthSec = fileLength%60;        
            this.label2.setText("Audio Length: "+filelengthMin+"'"+fileLengthSec+"\"");
            
            parentFrame.getMain().getAudioProcessor().reset();

            DateFormat dataFormat = new SimpleDateFormat("MM.dd.yyyy HH:mm:ss");
            this.label3.setText("Last updated: "+dataFormat.format(new Date(file.lastModified())));

            long pendingMill = System.currentTimeMillis()-file.lastModified();
            int hr = (int)pendingMill/3600000;
            int min = (int)(pendingMill-hr*3600000)/60000;
            int sec = (int)(pendingMill-hr*3600000-min*60000)/1000;

            this.label4.setText("Pending hours: "+hr+"h"+min+"m"+sec+"s");
            this.label5.setText("Priority: "+tokens.nextToken());
            this.label6.setText("Template: "+new StringTokenizer(tokens.nextToken(),".").nextToken());            
            
            parentFrame.getMain().getHeaderPanel().getLabel3().setText("Click Update to edit audio file");   
        }
    }//GEN-LAST:event_itemSelectAction
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private java.awt.Button button2;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.List list1;
    // End of variables declaration//GEN-END:variables

    public Button getButton1() {
        return button1;
    }

    public Button getButton2() {
        return button2;
    }

    public List getList1() {
        return list1;
    }

    public Label getLabel1() {
        return label1;
    }

    public Label getLabel2() {
        return label2;
    }

    public Label getLabel3() {
        return label3;
    }    
    
    public Label getLabel4() {
        return label4;
    }

    public Label getLabel5() {
        return label5;
    }

    public Label getLabel6() {
        return label6;
    }

    public void reset()
    {
        button1.setEnabled(false);
        button2.setEnabled(false);
        list1.removeAll();
        label1.setText("");
        label2.setText("");
        label3.setText("");
        label4.setText("");
        label5.setText("");
        label6.setText("");
    }
}
